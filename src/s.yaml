# ------------------------------------
#   欢迎您使用阿里云函数计算 FC 组件进行项目开发
#   组件仓库地址：https://github.com/devsapp/fc
#   组件帮助文档：https://www.serverless-devs.com/fc/readme
#   Yaml参考文档：https://www.serverless-devs.com/fc/yaml/readme
#   关于：
#      - Serverless Devs和FC组件的关系、如何声明/部署多个函数、超过50M的代码包如何部署
#      - 关于.fcignore使用方法、工具中.s目录是做什么、函数进行build操作之后如何处理build的产物
#   等问题，可以参考文档：https://www.serverless-devs.com/fc/tips
#   关于如何做CICD等问题，可以参考：https://www.serverless-devs.com/serverless-devs/cicd
#   关于如何进行环境划分等问题，可以参考：https://www.serverless-devs.com/serverless-devs/extend
#   更多函数计算案例，可参考：https://github.com/devsapp/awesome/
#   有问题快来钉钉群问一下吧：33947367
# ------------------------------------

edition: 1.0.0          #  命令行YAML规范版本，遵循语义化版本（Semantic Versioning）规范
name: framework         #  项目名称
# access 是当前应用所需要的密钥信息配置：
# 密钥配置可以参考：https://www.serverless-devs.com/serverless-devs/command/config
# 密钥使用顺序可以参考：https://www.serverless-devs.com/serverless-devs/tool#密钥使用顺序与规范
access: "{{ access }}"

vars:
  region: "{{ region }}"
  service:
    name: "{{ serviceName }}"
    description: 'Serverless Devs Web Framework Service'
    vpcConfig: 
      securityGroupId: "{{ securityGroupId }}"
      vswitchIds: 
        - "{{ vswitchId }}"
      vpcId: "{{ vpcId }}"
    nasConfig: 
      userId:      0
      groupId:     0
      mountPoints: 
        - 
          serverAddr: "{{ mountPointsServerAddr }}"
          nasDir:     /
          fcDir:      /mnt/nas

services:
  fc-nas-init:
    component: fc
    props:
      region: ${vars.region} # 关于变量的使用方法，可以参考：https://www.serverless-devs.com/serverless-devs/yaml#变量赋值
      service: ${vars.service}
      function:
        name: "nas-init"
        description: 'Prepare nas'
        codeUri: './code/init'
        runtime: python3.9
        timeout: 1200
        memorySize: 3072
        instanceConcurrency: 1
        handler: index.handler

  nas-filemgr: # 业务名称/模块名称
    component: fc # 组件名称
    actions:
      post-deploy:
        - component: fc invoke --service-name ${fc-nas-init.output.service.name} --function-name nas-init
    props: # 组件的属性值
      region: ${vars.region}
      service: ${vars.service}
      function:
        # name: "{{ functionName }}"
        name: kodbox
        description: 'Serverless Devs Web Framework kodbox  Function'
        codeUri: './code/kodbox'
        runtime: custom
        timeout: 7200
        memorySize: 1536
        instanceConcurrency: 8
        caPort: 80
        customRuntimeConfig:
          command:
            - bash
          args:
            - '-c'
            - '/code/start.sh'
      triggers:
        - name: httpTrigger
          type: http
          config:
            authType: anonymous
            methods:
              - GET
              - POST
              - PUT
              - DELETE
              - HEAD
              - OPTIONS
      customDomains:
        - domainName: auto
          protocol: HTTP
          routeConfigs:
            - path: /*

  keep-warm: # 辅助函数, 2 min 定时预热
    component: fc  # 组件名称
    actions:
      post-deploy: 
        - component: fc invoke
    props: # 组件的属性值
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: keep-warm
        description: 'Serverless Devs Web Framework Helper Function'
        codeUri: './code/keep-warm'
        runtime: python3
        timeout: 300
        memorySize: 128
        instanceConcurrency: 1
        environmentVariables:
          KODBOX_URL: ${nas-filemgr.output.url.system_url}
      triggers:
        - name: timerTrigger     
          type: timer   
          # qualifier: LATEST    
          config:    
            payload: '{}'    
            cronExpression: '@every 2m'    
            enable: false

